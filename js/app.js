// js/app.js - VERSI√ìN CON REINTENTOS AUTOM√ÅTICOS
console.log('‚úÖ app.js cargado');

let intentosInicializacion = 0;
const maxIntentos = 10; // 10 segundos m√°ximo

function inicializarAplicacion() {
    console.log(`üîÑ Verificando Firebase (intento ${intentosInicializacion + 1})...`);
    
    // Verificar si db est√° disponible Y es funcional
    if (typeof db !== 'undefined' && db && typeof db.collection === 'function') {
        console.log('‚úÖ Firebase est√° disponible - Inicializando m√≥dulos...');
        
        try {
            // Inicializar m√≥dulos
            window.gestorPacientes = new GestorPacientes();
            console.log('‚úÖ Gestor de pacientes inicializado');
            
            window.gestorRegistros = new GestorRegistros();
            console.log('‚úÖ Gestor de registros inicializado');
            
            window.gestorGraficos = new GestorGraficos();
            console.log('‚úÖ Gestor de gr√°ficos inicializado');
            
            console.log('üéâ ¬°APLICACI√ìN INICIALIZADA CORRECTAMENTE!');
            return; // ¬°√âXITO!
            
        } catch (error) {
            console.error('‚ùå Error inicializando m√≥dulos:', error);
            mostrarError('Error inicializando m√≥dulos: ' + error.message);
        }
        
    } else {
        // Firebase no est√° listo a√∫n
        intentosInicializacion++;
        
        if (intentosInicializacion < maxIntentos) {
            console.log(`‚è≥ Firebase no listo, reintentando en 1s... (${intentosInicializacion}/${maxIntentos})`);
            setTimeout(inicializarAplicacion, 1000);
        } else {
            console.error('‚ùå TIMEOUT: Firebase no se inicializ√≥ despu√©s de ' + maxIntentos + ' intentos');
            mostrarErrorFirebase();
        }
    }
}

function mostrarErrorFirebase() {
    const errorDiv = document.createElement('div');
    errorDiv.className = 'alert alert-warning alert-dismissible fade show m-3';
    errorDiv.innerHTML = `
        <h4>‚ö†Ô∏è Configuraci√≥n en Progreso</h4>
        <p>La aplicaci√≥n se est√° conectando con la base de datos. Esto puede tomar unos segundos.</p>
        <p><strong>Si el problema persiste:</strong></p>
        <ul>
            <li>Recarga la p√°gina</li>
            <li>Verifica tu conexi√≥n a internet</li>
            <li>Espera unos segundos y recarga</li>
        </ul>
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        <button type="button" class="btn btn-sm btn-outline-warning ms-2" onclick="location.reload()">
            üîÑ Recargar P√°gina
        </button>
    `;
    
    const container = document.querySelector('.container');
    if (container) {
        container.prepend(errorDiv);
    }
}

function mostrarError(mensaje) {
    const errorDiv = document.createElement('div');
    errorDiv.className = 'alert alert-danger alert-dismissible fade show m-3';
    errorDiv.innerHTML = `
        <strong>Error:</strong> ${mensaje}
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    `;
    
    const container = document.querySelector('.container');
    if (container) {
        container.prepend(errorDiv);
    }
}

// Iniciar la aplicaci√≥n cuando el DOM est√© listo
if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', function() {
        console.log('üìÑ DOM cargado - Iniciando aplicaci√≥n...');
        setTimeout(inicializarAplicacion, 500);
    });
} else {
    console.log('üìÑ DOM ya cargado - Iniciando aplicaci√≥n...');
    setTimeout(inicializarAplicacion, 500);
}

// Tambi√©n proporcionar una funci√≥n manual para reiniciar
window.reiniciarApp = function() {
    console.log('üîÑ Reiniciando aplicaci√≥n manualmente...');
    intentosInicializacion = 0;
    inicializarAplicacion();
};

console.log('üèÅ app.js configurado - Esperando inicializaci√≥n...');